<?php
// $Id: user_list.module,v 1.19.2.2 2008/12/31 16:25:08 cyu Exp $

/**
 * @file
 * This module creates several user lists, which may be viewed as pages and blocks.
 * User lists may be displayed alphabetically, beginning with A-Z, by newest, by role, or as a list of users who have posted content of a certain type.
 */

require_once 'includes/user_list.fields.inc';
require_once 'includes/user_list.form.inc';
require_once 'includes/user_list.conference.form.inc';
require_once 'includes/user_list.export.inc';
require_once 'includes/user_list.conference.inc';
require_once 'includes/user_list.settings.inc';
require_once 'includes/user_list.utils.inc';


/**
 * TODO: feature: change the current search, get the results directly from the DB (in process, Vahan)
 * TODO: bug: inner not does not work!
 * TODO: bug: very quickly check/uncheck fields to show. Then user lsit columns are brocken
 * TODO: bug: set currect email text and subject
 * TODO: feature: add the list of users to whom the message is being sent to the message sending page;
 * TODO: feature: make the search box the default active field
 * FIXED: bug: fix positions when ajax is in process
 * TODO: bug: after clicking on letters autocomplete does not work
 * DONE: bug: empty search returns nothing, should return a complete list
 * DONE: feature: after loading a search search is not done, still there is a need to refine the search
 * FIXED: bug: if nothing is found a full list is returned, but should return nothing
 * TODO: bug: sometimes the search load/save puts a wrong url - additional "q=userlist", FIXED at 22.06.2011, see line 259.
 * TODO: feature: save shown fields with the saved search
 * TODO: change all inner links to use l() functionuser
 * TODO: the help text on top doesn't make too much sence. Especially the part with blocks and permissions.
 * 
 * FIXED: bug 1: after ajax search, the bottom links to access paginated search are not updated. If you try to click on them you get an error msg.
 * FIXED: bug 2: authenticated role does not show up?  See get_user_role in includes\user_list.utils.inc
 * FIXED: bug 3: no-more 'select all' checkbox after an ajax request?
 * 
 * DONE: feature 1: We need to create an easier and more powerful way to handle to ajax search. We need to be able to use boolean logic: OR, AND, NOT  
 * DONE: feature 2: add button search/reset next to the ajax search
 * TODO: feature 3: we leave on a side the 'selected_users' table. Instead we display all the users within a box which has a vertical scroll bar
 * DONE: feature 4: The ajax search will hide what we don't want to see on a particular moment              
 * DONE: feature 5: save the query strings on the server, so that we immediately found our old search results with updated users.
 * TODO: feature 6: we will need to test it with huge amount of users to see how well it performs...
 * DONE: feature 7: userlist/export/ create automatic exports for roles
 * FIXED: BUG when loading search on urls with ?q
 * TODO: some style issues with livingscience.js. Background turnes white
 */


/**
 * 
 * Implementation of hook_title()
 * 
 * Returns the title of the current module's tab
 */
function user_list_science_title() {
  return "User List";
}

/**
 * 
 * Implementation of hook_science_tab()
 * 
 * Returns HTML to show in the User List visialization
 * @param array $list the search results to be rendered and shown
 * @param string $idSuffix the number of the current search dialog
 */
function user_list_science_tab($list, $idSuffix) {
  // Adding jquery ui components used
  drupal_add_library('system', 'ui.autocomplete');
  drupal_add_library('system', 'ui.datepicker');
  drupal_add_library('system', 'ui.dialog');
	
  // Adding javascripts
  drupal_add_js('http://livingscience.ethz.ch/livingscience/livingscience/livingscience.nocache.js', 'external');
  drupal_add_js(drupal_get_path('module', 'user_list') .'/user_list.js');
  drupal_add_js(drupal_get_path('module', 'visualscience') .'/visualscience.jquery.layout.js');
  drupal_add_js(drupal_get_path('module', 'visualscience') .'/visualscience.js');
  drupal_add_js(drupal_get_path('module', 'visualscience') .'/visualscience.jquery.dialog-extend.js');
  
  // Adding the css
  drupal_add_css(drupal_get_path('module', 'user_list') .'/user_list.css');
  
  $paginated = FALSE;
  $header = "User List";
  $empty_msg = "There are currently no users in this category to list.";
  $number = 30;
  $element = 0;
  
  // Creating the output
  $output = '<div class="visualscience-user_list" id="visualscience-user_list-';
  $output .= $idSuffix.'">';
  if ($header) {
    $output .= '<h3>'.$header.'</h3>';
  }
  $output .= '<div class="content">';
  
  $output .= drupal_render(drupal_get_form('user_list_form_'.$idSuffix, $list, $idSuffix));
  if ($paginated) {
    $output .= theme('pager', array(NULL, $number, $element));
  }
  $output .= "</div>";
  $output .= "</div>";
  return $output;
}

/**
 * 
 * Function to take care of having multiple instances of the same form on the page
 * @param $form_id the id of the form
 * @param $args arguments
 */
function user_list_forms($form_id, $args) {
  if (strpos($form_id, 'user_list_form') !== FALSE) {
      $forms[$form_id] = array(
        'callback' => 'user_list_form',
      );
      return $forms;
   } else if (strpos($form_id, 'user_list_conference_form') !== FALSE) {
   	  $forms[$form_id] = array(
        'callback' => 'user_list_conference_form',
      );
      return $forms;
   }
}



/**
 * 
 * Returns the div Id to be updated after search
 */
function user_list_get_update_div() {
  return "user_list-list";
}

/**
 * 
 * Returns updated part of the list
 * @param array $list	list of found users 	
 */
function user_list_update_tab($list) {
  return user_list_get_user_list($list);
}


/**
 * 
 * TODO:
 * @param array $vars	contains arguments as an array
 */
function theme_user_list_list($list, $idSuffix, $paginated = FALSE) {
  
  return user_list_science_tab($list, $idSuffix, $paginated);
}
